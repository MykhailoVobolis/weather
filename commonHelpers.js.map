{"version":3,"file":"commonHelpers.js","sources":["../src/js/openweather-api.js","../src/js/render-function.js","../src/main.js"],"sourcesContent":["// Додавання бібліотеки Axios\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.openweathermap.org';\nconst API_KEY = '117bcd5592950f9f701a11f5ab982de0';\n\n// Запит до OpenWeather API\nexport async function getWeather(city) {\n  const response = await axios.get('/data/2.5/weather', {\n    params: {\n      q: city,\n      appid: API_KEY,\n      units: 'metric',\n      lang: 'ua',\n    },\n  });\n  return response.data;\n}\n","export function markupWeather(params) {\n  const description = params.weather[0].description;\n  const iconWeather = params.weather[0].icon;\n  const temperature = Math.round(params.main.temp);\n  const feelsLikeTemperature = Math.round(params.main.feels_like);\n  const windSpeed = Math.round((params.wind.speed * 1000) / 3600);\n  const name = params.name;\n  const humidity = params.main.humidity;\n\n  return `<div>\n              <img src=\"https://openweathermap.org/img/wn/${iconWeather}@2x.png\" alt=\"weather\" class=\"weather\" />\n              <p class=\"description\">${description}</p>\n            </div>\n            <div class=\"temperature\">\n              <h2>${temperature}°с</h2>\n              <div class=\"feels-like\">\n                <p class=\"feels-like-value\">${feelsLikeTemperature}°с</p>\n                <p>Відчувається як</p>\n              </div>\n            </div>\n            <h1>${name}</h1>\n            <div>\n              <ul class=\"params-weather\">\n                <li class=\"params-weather-item\">\n                  <img src=\"/img/humidity.png\" alt=\"humidity\" />\n                  <div class=\"params-weather-value\">\n                    <p class=\"humidity\">${humidity}%</p>\n                    <p>Вологість</p>\n                  </div>\n                </li>\n                <li class=\"params-weather-item\">\n                  <img src=\"/img/wind.png\" alt=\"wind\" />\n                  <div class=\"params-weather-value\">\n                    <p class=\"wind\">${windSpeed} м/с</p>\n                    <p>Швидкість вітру</p>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </div>`;\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { getWeather } from './js/openweather-api';\nimport { markupWeather } from './js/render-function';\n\nconst fetchWeatherForm = document.querySelector('form');\nconst markupContainer = document.querySelector('.marcup-container');\n\nlet searchQuery = null;\n\nfetchWeatherForm.addEventListener('submit', fetchWeather);\n\nasync function fetchWeather(event) {\n  event.preventDefault();\n  markupContainer.innerHTML = '';\n\n  searchQuery = event.target.elements.search.value.trim();\n\n  if (searchQuery === '') {\n    iziToast.warning({\n      message: `Пошуковий запит не може бути порожнім`,\n      transitionIn: 'bounceInDown',\n      theme: 'dark',\n      messageColor: '#ffffff',\n      messageSize: 16,\n      messageLineHeight: 24,\n      color: '#FF8C00',\n      progressBar: false,\n      position: 'topRight',\n      maxWidth: 410,\n    });\n    return;\n  }\n\n  try {\n    const data = await getWeather(searchQuery);\n    const markup = markupWeather(data);\n    markupContainer.insertAdjacentHTML('beforeend', markup);\n  } catch (error) {\n    if (error.response.data.message) {\n      iziToast.error({\n        message: `На жаль, немає міст, які відповідають вашому пошуковому запиту. Будь ласка спробуйте ще раз!`,\n        transitionIn: 'bounceInDown',\n        theme: 'dark',\n        messageColor: '#ffffff',\n        messageSize: 16,\n        messageLineHeight: 24,\n        color: '#ef4040',\n        progressBar: false,\n        position: 'topRight',\n        maxWidth: 410,\n      });\n      return;\n    }\n    iziToast.error({\n      message: `${error}`,\n      transitionIn: 'bounceInDown',\n      theme: 'dark',\n      messageColor: '#ffffff',\n      messageSize: 16,\n      messageLineHeight: 24,\n      color: '#ef4040',\n      progressBar: false,\n      position: 'topRight',\n      maxWidth: 410,\n    });\n  } finally {\n    event.target.reset();\n  }\n}\n"],"names":["axios","API_KEY","getWeather","city","markupWeather","params","description","iconWeather","temperature","feelsLikeTemperature","windSpeed","name","humidity","fetchWeatherForm","markupContainer","searchQuery","fetchWeather","event","iziToast","data","markup","error"],"mappings":"6vBAGAA,EAAM,SAAS,QAAU,iCACzB,MAAMC,EAAU,mCAGT,eAAeC,EAAWC,EAAM,CASrC,OARiB,MAAMH,EAAM,IAAI,oBAAqB,CACpD,OAAQ,CACN,EAAGG,EACH,MAAOF,EACP,MAAO,SACP,KAAM,IACP,CACL,CAAG,GACe,IAClB,CCjBO,SAASG,EAAcC,EAAQ,CACpC,MAAMC,EAAcD,EAAO,QAAQ,CAAC,EAAE,YAChCE,EAAcF,EAAO,QAAQ,CAAC,EAAE,KAChCG,EAAc,KAAK,MAAMH,EAAO,KAAK,IAAI,EACzCI,EAAuB,KAAK,MAAMJ,EAAO,KAAK,UAAU,EACxDK,EAAY,KAAK,MAAOL,EAAO,KAAK,MAAQ,IAAQ,IAAI,EACxDM,EAAON,EAAO,KACdO,EAAWP,EAAO,KAAK,SAE7B,MAAO;AAAA,4DACmDE,CAAW;AAAA,uCAChCD,CAAW;AAAA;AAAA;AAAA,oBAG9BE,CAAW;AAAA;AAAA,8CAEeC,CAAoB;AAAA;AAAA;AAAA;AAAA,kBAIhDE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAMoBC,CAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAOZF,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAO/C,CClCA,MAAMG,EAAmB,SAAS,cAAc,MAAM,EAChDC,EAAkB,SAAS,cAAc,mBAAmB,EAElE,IAAIC,EAAc,KAElBF,EAAiB,iBAAiB,SAAUG,CAAY,EAExD,eAAeA,EAAaC,EAAO,CAMjC,GALAA,EAAM,eAAc,EACpBH,EAAgB,UAAY,GAE5BC,EAAcE,EAAM,OAAO,SAAS,OAAO,MAAM,OAE7CF,IAAgB,GAAI,CACtBG,EAAS,QAAQ,CACf,QAAS,wCACT,aAAc,eACd,MAAO,OACP,aAAc,UACd,YAAa,GACb,kBAAmB,GACnB,MAAO,UACP,YAAa,GACb,SAAU,WACV,SAAU,GAChB,CAAK,EACD,MACD,CAED,GAAI,CACF,MAAMC,EAAO,MAAMjB,EAAWa,CAAW,EACnCK,EAAShB,EAAce,CAAI,EACjCL,EAAgB,mBAAmB,YAAaM,CAAM,CACvD,OAAQC,EAAO,CACd,GAAIA,EAAM,SAAS,KAAK,QAAS,CAC/BH,EAAS,MAAM,CACb,QAAS,+FACT,aAAc,eACd,MAAO,OACP,aAAc,UACd,YAAa,GACb,kBAAmB,GACnB,MAAO,UACP,YAAa,GACb,SAAU,WACV,SAAU,GAClB,CAAO,EACD,MACD,CACDA,EAAS,MAAM,CACb,QAAS,GAAGG,CAAK,GACjB,aAAc,eACd,MAAO,OACP,aAAc,UACd,YAAa,GACb,kBAAmB,GACnB,MAAO,UACP,YAAa,GACb,SAAU,WACV,SAAU,GAChB,CAAK,CACL,QAAY,CACRJ,EAAM,OAAO,OACd,CACH"}